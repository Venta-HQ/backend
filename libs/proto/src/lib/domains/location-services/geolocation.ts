// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.6
//   protoc               v5.29.3
// source: domains/location-services/geolocation.proto

/* eslint-disable */
import type { Metadata } from "@grpc/grpc-js";
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";
import { Empty } from "../../shared/common";
import { Location } from "../../shared/location";

export const protobufPackage = "location_services.geolocation";

export interface LocationUpdate {
  entityId: string;
  coordinates: Location | undefined;
}

export interface VendorLocationRequest {
  ne: Location | undefined;
  sw: Location | undefined;
}

export interface VendorLocationResponse {
  vendors: VendorLocation[];
}

export interface VendorLocation {
  vendorId: string;
  coordinates: Location | undefined;
}

export const LOCATION_SERVICES_GEOLOCATION_PACKAGE_NAME = "location_services.geolocation";

export interface GeolocationServiceClient {
  updateVendorLocation(request: LocationUpdate, metadata?: Metadata): Observable<Empty>;

  vendorLocations(request: VendorLocationRequest, metadata?: Metadata): Observable<VendorLocationResponse>;
}

export interface GeolocationServiceController {
  updateVendorLocation(request: LocationUpdate, metadata?: Metadata): Promise<Empty> | Observable<Empty> | Empty;

  vendorLocations(
    request: VendorLocationRequest,
    metadata?: Metadata,
  ): Promise<VendorLocationResponse> | Observable<VendorLocationResponse> | VendorLocationResponse;
}

export function GeolocationServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["updateVendorLocation", "vendorLocations"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("GeolocationService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("GeolocationService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const GEOLOCATION_SERVICE_NAME = "GeolocationService";
