model User {
    id        String  @id @default(uuid())
    clerkId   String  @unique
    email     String?
    firstName String?
    lastName  String?
    isActive  Boolean @default(true)
    lat       Float?
    long      Float?

    // Metadata
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // Relations
    vendors      Vendor[]
    subscription UserSubscription?
    integrations Integration[]

    @@map("user")
}

enum SubscriptionStatus {
    active
    cancelled
    expired
}

enum SubscriptionProvider {
    revenuecat
}

model UserSubscription {
    id         String               @id @default(uuid())
    userId     String               @unique
    user       User                 @relation(fields: [userId], references: [id])
    status     SubscriptionStatus   @default(active)
    provider   SubscriptionProvider
    externalId String
    productId  String
    startDate  DateTime
    endDate    DateTime?

    // Metadata
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@map("user_subscription")
}
