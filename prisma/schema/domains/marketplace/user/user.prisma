model User {
    id        String  @id @default(uuid())
    clerkId   String  @unique
    email     String?
    firstName String?
    lastName  String?

    // Metadata
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // Relations
    vendors      Vendor[]
    subscription UserSubscription?

    @@map("user")
}

enum SubscriptionStatus {
    active
    cancelled
    expired
}

enum SubscriptionProvider {
    revenuecat
}

model UserSubscription {
    id         String               @id @default(uuid())
    status     SubscriptionStatus   @default(active)
    provider   SubscriptionProvider
    externalId String // External provider subscription ID (e.g., RevenueCat)
    productId  String
    startDate  DateTime
    endDate    DateTime?

    // Store provider-specific data (e.g., RevenueCat metadata)
    metadata Json?

    // Metadata
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // Relations
    userId String @unique
    user   User   @relation(fields: [userId], references: [id])

    @@map("user_subscription")
}
